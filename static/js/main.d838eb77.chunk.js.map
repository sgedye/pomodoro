{"version":3,"sources":["Components/Timers.js","Components/Countdown.js","Components/Controls.js","index.js"],"names":["Container","styled","div","Timer","Selectors","Timers","props","id","onClick","handleChange","type","size","value","breakLength","readOnly","sessionLength","Countdown","Controls","console","log","Provider","color","handlePlayPause","handleReset","Title","h1","Footer","p","App","useState","setBreakLength","setSessionLength","timeRemaining","setTimeRemaining","isPlaying","setIsPlaying","split","change","ReactDOM","render","document","getElementById"],"mappings":"moBAKA,IAAMA,EAAYC,IAAOC,IAAV,KAGTC,EAAQF,IAAOC,IAAV,KAOLE,EAAYH,IAAOC,IAAV,KA2CAG,MAnCf,SAAgBC,GACd,OACE,kBAACN,EAAD,KACE,kBAACG,EAAD,CAAOI,GAAG,eACR,2BAAOA,GAAG,eAAV,gBACA,kBAACH,EAAD,KACE,kBAAC,IAAD,CACEG,GAAG,kBACHC,QAAS,kBAAMF,EAAMG,aAAa,sBAEpC,2BAAOF,GAAG,eAAeG,KAAK,OAAOC,KAAK,IAAIC,MAAON,EAAMO,YAAaC,UAAQ,IAChF,kBAAC,IAAD,CACEP,GAAG,kBACHC,QAAS,kBAAMF,EAAMG,aAAa,wBAIxC,kBAACN,EAAD,CAAOI,GAAG,iBACR,2BAAOA,GAAG,iBAAV,kBACA,kBAACH,EAAD,KACE,kBAAC,IAAD,CACEG,GAAG,oBACHC,QAAS,kBAAMF,EAAMG,aAAa,wBAEpC,2BAAOF,GAAG,iBAAiBG,KAAK,OAAOC,KAAK,IAAIC,MAAON,EAAMS,cAAeD,UAAQ,IACpF,kBAAC,IAAD,CACEP,GAAG,oBACHC,QAAS,kBAAMF,EAAMG,aAAa,4B,iSC/C9C,IAAMT,EAAYC,IAAOC,IAAV,KAuBAc,MATf,SAAmBV,GACjB,OACE,kBAAC,EAAD,KACE,yBAAKC,GAAG,eAAeD,EAAMI,MAC7B,yBAAKH,GAAG,aAAR,SAFF,M,OCAWU,MAbf,SAAkBX,GAEhB,OADAY,QAAQC,IAAIb,GAEV,kBAAC,IAAYc,SAAb,CAAsBR,MAAO,CAAES,MAAO,OAAQV,KAAM,WAClD,yBAAKJ,GAAG,aAAaC,QAAS,kBAAMF,EAAMgB,oBACxC,kBAAC,IAAD,MACA,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAWf,GAAG,QAAQC,QAAW,kBAAMF,EAAMiB,mB,4LCJnD,IAAMC,EAAQvB,IAAOwB,GAAV,KAGLC,EAASzB,IAAO0B,EAAV,KAIZ,SAASC,IAAO,IAAD,EACYC,mBAAS,WADrB,mBACLnB,EADK,aAE2BmB,mBAAS,IAFpC,mBAELhB,EAFK,KAEQiB,EAFR,OAG+BD,mBAAS,IAHxC,mBAGLd,EAHK,KAGUgB,EAHV,OAI+BF,mBAAS,IAJxC,mBAILG,EAJK,KAIUC,EAJV,OAKsBJ,oBAAS,GAL/B,mBAKLK,EALK,KAKMC,EALN,KA8Bb,OACE,yBAAK5B,GAAG,YACN,kBAACiB,EAAD,iBACA,kBAAC,EAAD,CAAQX,YAAaA,EAAaE,cAAeA,EAAeN,aA1BjD,SAAAF,GAAO,IAAD,EACAA,EAAG6B,MAAM,KADT,mBAChB1B,EADgB,KACV2B,EADU,KAEV,UAAT3B,GAA+B,cAAX2B,GAA0BxB,EAAc,GAC9DiB,EAAejB,EAAc,GACX,UAATH,GAA+B,cAAX2B,GAA0BxB,EAAc,EACrEiB,EAAejB,EAAc,GACX,YAATH,GAAiC,cAAX2B,GAA0BtB,EAAgB,GACzEgB,EAAiBhB,EAAgB,GACf,YAATL,GAAiC,cAAX2B,GAA0BtB,EAAgB,GACzEgB,EAAiBhB,EAAgB,MAkBjC,kBAAC,EAAD,CAAWL,KAAMA,EAAMsB,cAAeA,IACtC,kBAAC,EAAD,CAAUT,YAXK,WACjBL,QAAQC,IAAI,cACZc,EAAiB,IACjBE,GAAa,IAQwBb,gBAfrB,WAChBJ,QAAQC,IAAI,eAAgBe,GAC5BC,GAAcD,MAcZ,kBAACR,EAAD,8BAKSE,YAEfU,IAASC,OAAO,kBAACX,EAAD,MAASY,SAASC,eAAe,W","file":"static/js/main.d838eb77.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport { FaAngleDown, FaAngleUp } from 'react-icons/fa'\n\nconst Container = styled.div`\n  padding: 20px 0;\n`\nconst Timer = styled.div`\n  display: inline-block;\n  width: 50%;\n  margin: 0 auto;\n  text-align: center;\n  background: lightblue;\n`\nconst Selectors = styled.div`\n  width: auto;\n  & > input {\n    text-align: center;\n  }\n\n`\n\nfunction Timers(props) {\n  return (\n    <Container>\n      <Timer id=\"break-timer\">\n        <label id=\"break-label\">Break Length</label>\n        <Selectors>\n          <FaAngleDown\n            id=\"break-decrement\"\n            onClick={() => props.handleChange(\"break-decrement\")}\n          />\n          <input id=\"break-length\" type=\"text\" size=\"2\" value={props.breakLength} readOnly />\n          <FaAngleUp\n            id=\"break-increment\"\n            onClick={() => props.handleChange(\"break-increment\")}\n          />\n        </Selectors>\n      </Timer>\n      <Timer id=\"session-timer\">\n        <label id=\"session-label\">Session Length</label>\n        <Selectors>\n          <FaAngleDown\n            id=\"session-decrement\"\n            onClick={() => props.handleChange(\"session-decrement\")}\n          />\n          <input id=\"session-length\" type=\"text\" size=\"2\" value={props.sessionLength} readOnly />\n          <FaAngleUp\n            id=\"session-increment\"\n            onClick={() => props.handleChange(\"session-increment\")}\n          />\n        </Selectors>\n      </Timer>\n    </Container>\n  )\n}\n\nexport default Timers\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  width: 80%;\n  margin: 0 auto;\n  padding: 20px 0;\n  background: yellow;\n  border: 2px solid purple;\n  border-radius: 20px;\n  text-align: center;\n  & > div {\n    font-size: 1.8em;\n    font-weight: bold;\n  }\n`\n\nfunction Countdown(props) {\n  return (\n    <Container>\n      <div id=\"timer-label\">{props.type}</div>\n      <div id=\"time-left\">25:00</div> {/* props.timeRemaining || make a time object */}\n    </Container>\n  )\n}\n\nexport default Countdown\n\n","import React from 'react'\n\nimport { IconContext } from 'react-icons'\nimport { FaPlay, FaPause, FaRedoAlt } from 'react-icons/fa'\n\n\nfunction Controls(props) {\n  console.log(props)\n  return (\n    <IconContext.Provider value={{ color: \"blue\", size: \"1.2rem\" }}>\n      <div id=\"start-stop\" onClick={() => props.handlePlayPause()}>\n        <FaPlay />\n        <FaPause />\n      </div>\n      <FaRedoAlt id='reset' onClick = {() => props.handleReset()} />\n    </IconContext.Provider>\n  )\n}\n\nexport default Controls\n","import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport styled from 'styled-components'\n\nimport './index.css'\n\nimport Timers from './Components/Timers'\nimport Countdown from './Components/Countdown'\nimport Controls from './Components/Controls'\n\nconst Title = styled.h1`\n  text-align: center;\n`\nconst Footer = styled.p`\n  text-align: center;\n`\n\nfunction App() {\n  const [ type, setType] = useState('Session')   /* use setType when timer (timeRemaining === zero) */\n  const [ breakLength, setBreakLength ] = useState(5)\n  const [ sessionLength, setSessionLength ] = useState(25)\n  const [ timeRemaining, setTimeRemaining ] = useState(25)\n  const [ isPlaying, setIsPlaying] = useState(false)\n\n  const changeTime = id => {\n    const [type, change] = id.split('-')\n    if (type === 'break' && change === 'increment' && breakLength < 60) {\n      setBreakLength(breakLength + 1)\n    } else if (type === 'break' && change === 'decrement' && breakLength > 0) {\n      setBreakLength(breakLength - 1)\n    } else if (type === 'session' && change === 'increment' && sessionLength < 60) {\n      setSessionLength(sessionLength + 1)\n    } else if (type === 'session' && change === 'decrement' && sessionLength > 0) {\n      setSessionLength(sessionLength - 1)\n    }\n  }\n\n  const playPause = () => {\n    console.log(\"Is playing? \", isPlaying)\n    setIsPlaying(!isPlaying)\n  }\n  const resetTimer = () => {\n    console.log(\"resetTimer\")\n    setTimeRemaining(25)\n    setIsPlaying(false)\n  }\n\n  return (\n    <div id=\"pomodoro\">\n      <Title>Pomodoro</Title>\n      <Timers breakLength={breakLength} sessionLength={sessionLength} handleChange={changeTime} />\n      <Countdown type={type} timeRemaining={timeRemaining} />\n      <Controls handleReset={resetTimer} handlePlayPause={playPause} />\n      <Footer>Create by Shaunicles</Footer>\n    </div>\n  )\n}\n\nexport default App\n\nReactDOM.render(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}